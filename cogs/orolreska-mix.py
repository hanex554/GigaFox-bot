import disnake
from disnake.ext import commands
import random

class CoinCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(
        name="–º–æ–Ω–µ—Ç–∫–∞",
        description="–ò–≥—Ä–∞ –≤ –æ—Ä–ª–∞ –∏ —Ä–µ—à–∫—É.",
        options=[
            disnake.Option(
                name="choice",
                description="–í–∞—à –≤—ã–±–æ—Ä: –æ—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞.",
                type=disnake.OptionType.string,
                required=False,
                choices=[
                    disnake.OptionChoice(name="–û—Ä–µ–ª ü¶Ö", value="–û—Ä–µ–ª ü¶Ö"),
                    disnake.OptionChoice(name="–†–µ—à–∫–∞ ü™ô", value="–†–µ—à–∫–∞ ü™ô"),
                ]
            )
        ]
    )
    async def coin_slash(self, ctx, choice: str = None):
        """–ò–≥—Ä–∞ –≤ –æ—Ä–ª–∞ –∏ —Ä–µ—à–∫—É —Å –≤—ã–±–æ—Ä–æ–º."""
        choices = ["–û—Ä–µ–ª ü¶Ö", "–†–µ—à–∫–∞ ü™ô"]
        result = random.choice(choices)

        if choice:
            if choice == result:
                outcome = f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {choice}. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —É–≥–∞–¥–∞–ª–∏!"
            else:
                outcome = f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {choice}. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã–ø–∞–ª–æ {result}."
        else:
            outcome = f"–ú–æ–Ω–µ—Ç–∞ –≤—ã–ø–∞–ª–∞: {result}"

        # –°–æ–∑–¥–∞–µ–º embed –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        embed = disnake.Embed(
            title="–ò–≥—Ä–∞ –≤ –æ—Ä–ª–∞ –∏ —Ä–µ—à–∫—É",
            description=outcome,
            color=disnake.Color.random()
        )

        await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(CoinCog(bot))
